<?xml version="1.0" encoding="utf-8"?>
<local:ChatController 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:txt="text.*"
	layout="absolute"
	xmlns:local="*"
	height="750" width="900"
	backgroundColor="gray"
	backgroundAlpha="0"
	creationComplete="chooseRole(event);activeSlots();"
	>
	<fx:Declarations>
		  
	</fx:Declarations>
	<fx:Script source="ActionScript/main.as"/>
	<fx:Script source="ActionScript/fas_mysql.as"/>
	<fx:Script>
		<![CDATA[
			import flash.events.TimerEvent;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ControlBar;
			import mx.containers.Panel;
			import mx.containers.VBox;
			import mx.controls.Alert;
			import mx.controls.Spacer;
			import mx.managers.PopUpManager;
			import mx.utils.Base64Encoder;
			
			import spark.components.Button;
			import spark.components.DropDownList;
			import spark.components.Label;
			import spark.components.TextInput;
			public var username:String;
			public var timr:Timer = new Timer(1000);
			public var t1:Label;
			private var timeLapse:uint = 0;
			public var loadin:Boolean = true;
			public var picked:String;
			public var panel:Panel;
			//public var inUse:ArrayCollection;
			public var inUse:Object;
			
			public var dbCheck:Object;
			public var textInput:TextInput = new TextInput();
			//private var timer2:Timer = new Timer(1000);
			
			public var dropDown:DropDownList = new DropDownList();
			public var tempButton:Button;
			public var tempSlott:String;
			
			public function initPop(btn:Button, slott:String):void {
				if(btn.label !="Leave Slot"){
					picked = slott;
					
					var vb:VBox = new VBox();
					var label:Label = new Label();
					//var textInput:TextInput = new TextInput();
					
					var cb:ControlBar = new ControlBar();
					var s:Spacer = new Spacer();
					var b1:Button = new Button();
					var b2:Button = new Button();
					tempButton = btn;
					tempSlott = slott;
					
					s.percentWidth = 100;
					
					b1.label = "OK";
					b1.addEventListener(MouseEvent.CLICK, signIn);
					//b1.addEventListener(MouseEvent.CLICK, subscribe1);
					b2.label = "Cancel";
					b2.addEventListener(MouseEvent.CLICK, closePopUp);
					
					//cb.addChild(s);
					//cb.addChild(b1);
					//cb.addChild(b2);
					
					label.text = "This is how you'll appear in the chat";
					//slots();
					//dropDown.dataProvider = userChoices;
					//dropDown.labelField = "ddlLabel";
					vb.setStyle("paddingBottom", 5);
					vb.setStyle("paddingLeft", 5);
					vb.setStyle("paddingRight", 5);
					vb.setStyle("paddingTop", 5);
					vb.addChild(label);
					vb.addChild(textInput);
					
					//vb.addChild(dropDown);
					vb.addChild(b1);
					vb.addChild(b2);
					
					panel = new Panel();
					panel.title = "Type in your name";
					panel.width = 240;
					panel.height = 180;
					panel.addChild(vb);
					panel.addChild(cb);
					//createPopUp();
					PopUpManager.addPopUp(panel, this, true);
					PopUpManager.centerPopUp(panel);
				}else{
					unPublish(slott);
				}
			}
			
			private function closePopUp(evt:MouseEvent):void {
				PopUpManager.removePopUp(panel);
			}
			
			private function createPopUp(evt:Event):void {
				//initPop();
				PopUpManager.addPopUp(panel, this, true);
				PopUpManager.centerPopUp(panel);
			}
			private function chooseRole(evt:Event):void{
				//picked = dropDown.selectedItem.slot as String;
				startDB();
				//activeSlots();
				mainInit('Listener');
				
				
				//timr = new Timer(1000);
				//timr.addEventListener(TimerEvent.TIMER, checkSub);
				//timr.start();
				connectQuery();
				
				//Alert.show('just did doconnect');
				//PopUpManager.removePopUp(panel);
				//Alert.show('REMOVE POPUP ' + picked);
				//Alert.show(picked);
			}
			public function connectQuery():void{
				doConnect2();
				
				
				subscribeAll(inUse,picked);
				timr.addEventListener(TimerEvent.TIMER, checkSub);
				timr.start();
				//takeSlot();
				
			}
			
			public function takeIt(btn:Button, slott:String):void{
				if(btn.label !="Leave Slot"){
					picked = slott;
					takeSlot();
					publish2(slott);
					doSubscribe1.visible = false;
					doSubscribe2.visible = false;
					doSubscribe3.visible = false;
					doSubscribe4.visible = false;
					btn.label = "Leave Slot";
					btn.visible = true;
				}else{
					unPublish(slott);
				}
			}
			
			
			
			public function checkSub(event:TimerEvent):void {
				activeSlots();
				startDB();
				timeLapse += 1;
				if(timeLapse < 3){
					return;}
				//trace('TIME:'+timeLapse);
				//t1.text = timeToString(timeLapse);
				//subscribeAll();
				
				subscribeAll(inUse,picked);
				//if(loadin && scrubbed && dbCheck !=null){
				if(loadin){
					if(dbCheck != null){
					loadingLabel.visible=false;
					vidScreen2.visible =true;
					textWindow.visible = true;
					loadin = false;
					}
				}
				
				
			}
			
			
			private function timer_timer(evt:TimerEvent):void {
				
				t1.text = timeToString(timeLapse);
			}
			private function onTimer(event:TimerEvent):void
				
			{
				
				timeLapse += 1;
				
				t1.text = timeToString(timeLapse);
				
				
				
			}
			public function timeToString(value:Number):String
				
			{
				
				var seconds:Number  = value % 60;
				
				var minutes:Number  = Math.floor((value/60) % 60);
				
				var hours:Number  = Math.floor((value/3600) % 24);
				
				
				
				var s:String = seconds < 10 ? "0" + String(seconds) : String(seconds);
				
				var m:String = minutes < 10 ? "0" + String(minutes) : String(minutes);
				
				var h:String = hours < 10 ? "0" + String(hours) : String(hours);
				
				
				
				return h + ":" + m  + ":" +  s;
				
			}
			
		]]>
		
	</fx:Script>
	
	<fx:Style source="MVP.css"/>
	<s:BorderContainer id="wholApp" x="0" y="-16" width="892" height="550" dropShadowVisible="true">
		<s:backgroundFill>	
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#CCCCCC"/>
				<s:GradientEntry color="#999999"/>
			</s:LinearGradient>
		</s:backgroundFill>
	</s:BorderContainer>
	<s:BorderContainer id="vidScreen2" x="10" y="10" width="880" height="200"
					    visible="false" borderColor="black" borderWeight="8" dropShadowVisible="true" >
		<s:backgroundFill>	
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#CCCCCC"/>
				<s:GradientEntry color="#999999"/>
			</s:LinearGradient>
		</s:backgroundFill>
		<s:BorderContainer width="180" height="120" x="14" y="7" id="bContainer1" dropShadowVisible="true"  >
			
			<s:backgroundFill>	
				<s:LinearGradient rotation="180">
					<s:GradientEntry color="#C2D6D6"/>
					<s:GradientEntry color="#F0F5F5"/>
				</s:LinearGradient>
			</s:backgroundFill>
			<mx:UIComponent width="180" height="120" x="0" y="0" id="videoRemoteContainer1"   />
			<s:Label width="143" height="93" x="14" y="7" id="available1" text="this slot available" visible="true"/>
			
			<s:Rect id="meter1" x="0" y="90" width="10%" height="80%" visible="false">                              
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="red" alpha="1"/>
				</s:fill>
				
			</s:Rect>
		</s:BorderContainer>
		
		<s:BorderContainer width="180" height="120" x="214" y="7" id="bContainer2" dropShadowVisible="true"  >
			<s:backgroundFill>	
				<s:LinearGradient rotation="180">
					<s:GradientEntry color="#C2D6D6"/>
					<s:GradientEntry color="#F0F5F5"/>
				</s:LinearGradient>
			</s:backgroundFill>
			<mx:UIComponent width="180" height="120" x="0" y="0" id="videoRemoteContainer2"/>
			<s:Label width="140" height="80" x="14" y="7" id="available2" text="this slot available" visible="true"/>
			<s:Rect id="meter2" x="0" y="90" width="10%" height="80%" visible="false">                              
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="red" alpha="1"/>
				</s:fill>
				
			</s:Rect>

		</s:BorderContainer>
		
		<s:BorderContainer width="180" height="120" x="414" y="7" id="bContainer3" dropShadowVisible="true"  >	
			<s:backgroundFill>	
				<s:LinearGradient rotation="180">
					<s:GradientEntry color="#C2D6D6"/>
					<s:GradientEntry color="#F0F5F5"/>
				</s:LinearGradient>
			</s:backgroundFill>
			<mx:UIComponent width="180" height="120" x="0" y="0" id="videoRemoteContainer3"/>
			<s:Label width="180" height="75" x="14" y="7" id="available3" text="this slot available" visible="true" />
			<s:Rect id="meter3" visible="false" x="0" y="90" width="10%" height="70%">                              
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="red" alpha="1"/>
				</s:fill>
				
			</s:Rect>

		</s:BorderContainer>
		
		<s:BorderContainer width="180" height="120" x="614" y="7" id="bContainer4" dropShadowVisible="true"  >
			<s:backgroundFill>	
				<s:LinearGradient rotation="180">
					<s:GradientEntry color="#C2D6D6"/>
					<s:GradientEntry color="#F0F5F5"/>
				</s:LinearGradient>
			</s:backgroundFill>
			<mx:UIComponent width="180" height="120" x="0" y="0" id="videoRemoteContainer4"/>
			<s:Label width="180" height="75" x="14" y="7" id="available4" text="this slot available" visible="true"/>
			<s:Rect id="meter4" x="0" y="90" width="10%" height="80%" visible="false">                              
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="red" alpha="1"/>
				</s:fill>
				
			</s:Rect>

		</s:BorderContainer>
		<s:Button label="Take Slot 1" id="doSubscribe1" x="67" y="146" visible="true" click="initPop(doSubscribe1,'A1')"/>
		<s:Button label="Take Slot 2" id="doSubscribe2" x="264" y="146" visible="true" click="initPop(doSubscribe2,'A2')"/>
		<s:Button label="Take Slot 3" id="doSubscribe3" x="463" y="146" visible="true" click="initPop(doSubscribe3,'A3')"/>
		<s:Button label="Take Slot 4" id="doSubscribe4" x="662" y="146" visible="true" click="initPop(doSubscribe4,'A4')"/>
	</s:BorderContainer>	
	<s:TextInput id="subscribeName2" x="210" y="150" width="85" visible="false" />
	<s:TextInput id="subscribeName1" x="26" y="150" width="85" visible="false"/>
	<s:Button id="startTalking" x="26" y="170" width="85" label="Connect" visible="false"/>
	<!-- <s:Label id="t1" x="26" y="230" width="85" text="duh"/> -->
	<s:TextInput id="publishName" x="26" y="150" width="85" visible="false"/>
	<s:Button label="Publish" id="doPublish" x="120" y="150" visible="false"  />
	<s:TextInput id="subscribeName4" x="619" y="149" width="85" visible="false"/>
	<mx:HBox x="120" y="240" horizontalGap="0"  visible="false"> 
		<s:TextInput id="connectStr" width="266" visible="false"/>
		<mx:Spacer width="4"/>
		<s:Button label="Connect" id="connectButton" visible="false"/>
	</mx:HBox>
	<mx:Text id="playerVersion" x="120" y="264" width="172" color="#747474" fontSize="10" visible="false" />
	<mx:Text id="fpsText" x="6" y="304" width="85" visible="false"/>
	<mx:Text id="bufferLenText" x="456" y="304" width="85" visible="false"/>
	<mx:Text id="prompt" x="101" y="295" width="347" height="30" visible="false"/>
	<mx:Text id="prompt2" x="101" y="275" width="347" height="30" visible="false"/>
	<s:TextInput id="subscribeName3" x="421" y="149" width="85" visible="false" />
	<s:List id="activeList" x="516" y="185" visible="false"></s:List>
	<s:Label id="loadingLabel" x="303" y="119" width="151" height="43" backgroundColor="#38A2CE"
			 fontSize="20" text="Application Loading;"/>
	
	
	<txt:txtcht id="textWindow" x="10" y="218" width="880" visible="false"  />
	
</local:ChatController>

